/* tslint:disable */
/* eslint-disable */

// ######################################## THIS FILE WAS GENERATED BY MONGOOSE-TSGEN ######################################## //

// NOTE: ANY CHANGES MADE WILL BE OVERWRITTEN ON SUBSEQUENT EXECUTIONS OF MONGOOSE-TSGEN.
// TO ADD CUSTOM INTERFACES, DEFINE THEM IN THE `custom.d.ts` FILE.

import mongoose from "mongoose";

declare module "mongoose" {

	interface UserFriend {		uid: User["_id"] | User;
		nickname?: string;
		_id: mongoose.Types.ObjectId;
	}

	interface UserQueries {
		populateFriends<Q extends mongoose.DocumentQuery<any, UserDocument, {}>>(this: Q, ...args: any[]): Q;
	}

	interface UserModel extends Model<UserDocument, UserQueries> {
		getFriends: (this: any, friendUids: UserDocument["_id"][]) => Promise<any>;
	}

	interface User {
		email: string;
		firstName: string;
		lastName: string;
		friends: UserFriend[];
		city: {
			coordinates?: number[];
		};
		_id: mongoose.Types.ObjectId;
	}

	type UserFriendDocument = mongoose.Types.Subdocument & {
		uid: UserDocument["_id"] | UserDocument;
	} & UserFriend

	type UserDocument = mongoose.Document & {
		metadata?: any;
		friends: mongoose.Types.DocumentArray<UserFriendDocument>;
		city: {
		};
		name: any;
		isMetadataString: (this: any) => boolean;
	} & User

}
