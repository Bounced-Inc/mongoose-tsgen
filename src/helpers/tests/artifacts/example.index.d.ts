/* tslint:disable */
/* eslint-disable */

// ######################################## THIS FILE WAS GENERATED BY MONGOOSE-TSGEN ######################################## //

// NOTE: ANY CHANGES MADE WILL BE OVERWRITTEN ON SUBSEQUENT EXECUTIONS OF MONGOOSE-TSGEN.
// TO ADD CUSTOM INTERFACES, DEFINE THEM IN THE `custom.d.ts` FILE.

import mongoose from "mongoose";

declare module "mongoose" {
  interface IUserFriend {
    uid: IUser["_id"] | IUser;
    nickname?: string;
    _id: mongoose.Types.ObjectId;
  }

  interface IUserQueries {
    populateFriends<Q extends mongoose.DocumentQuery<any, IUserDocument, {}>>(
      this: Q,
      ...args: any[]
    ): Q;
  }

  interface IUserModel extends Model<IUserDocument, IUserQueries> {
    getFriends: (this: any, friendUids: IUser["_id"][]) => Promise<any>;
  }

  interface IUser {
    email: string;
    firstName: string;
    lastName: string;
    friends: IUserFriend[];
    city: {
      coordinates?: number[];
    };
    _id: mongoose.Types.ObjectId;
  }

  type IUserFriendDocument = mongoose.Types.Subdocument & {
    uid: IUserDocument["_id"] | IUserDocument;
  } & IUserFriend;

  type IUserDocument = mongoose.Document & {
    metadata?: any;
    friends: mongoose.Types.DocumentArray<IUserFriendDocument>;
    city: {};
    name: any;
    isMetadataString: (this: any) => boolean;
  } & IUser;
}
